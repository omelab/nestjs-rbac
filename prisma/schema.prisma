// base schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Module {
  id          Int          @id @default(autoincrement())
  title       String       @unique
  parentId    Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
  permissions Permission[]

  @@map(name: "modules")
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  module    Module?  @relation(fields: [moduleId], references: [id])
  moduleId  Int?
  roles     Role[]   @relation("RolePermission")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "permissions")
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  description String?
  permissions Permission[] @relation("RolePermission")
  users       User[]       @relation("UserRole")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map(name: "roles")
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  email         String       @unique
  password      String
  refreshToken  String?
  name          String?
  designation   Designation? @relation(fields: [designationId], references: [id])
  designationId Int?
  roles         Role[]       @relation("UserRole")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  deletedAt     DateTime?

  @@map(name: "users")
}

model Designation {
  id        Int           @id @default(autoincrement())
  title     String
  parentId  Int?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  deletedAt DateTime?
  children  Designation[] @relation("SubDesignation")
  parent    Designation?  @relation("SubDesignation", fields: [parentId], references: [id])
  users     User[]

  @@map(name: "designations")
}
